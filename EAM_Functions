def V2(r,cutoff):
    y1 = np.exp(12.333392307614 - 10.847321969086*r + 4.5733524424508*r*r- 0.85266291445935*r**3)
    y2 = -14.261501929757*(3.5 - r)**4 + 15.850036758176*(3.5 - r)**5 - 11.325102264291*(3.5 - r)**6
    y2 += -4.0971114831366*(3.5 - r)**7 + 3.6739378016909*(3.5 - r)**8
    y3 = 1.3066813393823*(6.0 - r)**4 - 0.60542710718094*(6.0 - r)**5 + 1.0055527194350*(6.0 - r)**6
    y3 -= (0.14918186777562*(6.0 - r)**7 - 0.032773112059590*(6.0 - r)**8)
    y4 = 0.011433120304691*(7.6 - r)**4 - 0.021982172508973*(7.6 - r)**5
    y4 += (-0.012542439692607*(7.6 - r)**6 + 0.025062673874258*(7.6 - r)**7 - 0.0075442887837418*(7.6 - r)**8)
     
    return y2 + y3 + y4


def V3(r,cutoff):
        y1 = np.exp(12.882230038192 - 12.183850157814*r + 5.5998956281737*r**2 -  1.0915156420318*r**3)
        y2 = 8.4670497139946*(3.5 - r)**4 - 46.183472786003*(3.5 - r)**5 + 79.633499844770*(3.5 - r)**6
        y2 -= 64.847634731465*(3.5 - r)**7 + 19.454623850774*(3.5 - r)**8
        y3 =  -0.097845860135187*(6.0- r)**4 - 0.47537134413743*(6.0 - r)**5 - 0.00096806164225329*(6.0 - r)**6
        y3 -= 0.16355187497617*(6.0 - r)**7 - 0.00090914903435333*(6.0 - r)**8
        y4 = 0.022038480751134*(7.6 - r)**4 - 0.060955465943384*(7.6 - r)**5 + 0.11573689045653*(7.6 - r)**6
        y4 = y4 - 0.062697675088029*(7.6 - r)**7 + 0.011273545085049*(7.6 - r)**8
        
           
def phi(r,cutoff):
     p1 = 0.77718711248373*(5.6-r)**4 -0.48102928454986*(5.6 - r)**5+0.14501312593993*(5.6 - r)**6
    p1 = p1 + (-0.021292226813959*(5.6 - r)**7+0.0012209217625670*(5.6 - r)**8)
     return p1

def F2(p):
    b = p**(-1/2) -1.9162462126235*10**7*(p - 60)**4 +4.6418727035037*(10**7)*(p-70)**4
    b+= 6.6448294272955*(10-7)*(p-80)**4 -2.0680252960229*(10-6)*(p - 85)**4 +1.1387131464983*(10-6)*(p - 90)**4
    
    return(b)   
    
           
def F3(p):
    b = p**(1/2) + 3.2283012597866*10**7*(p - 60)**4 -1.1552813894483*10**6*(p - 70)**4
    b+= 2.3747280268355*10**6*(p - 80)**4 -2.0379550826523*10**6*(p - 85)**4 + 4.9758343293936*10**7*(p - 90)**4
     
    return b




def U_i(rij,N,cutoff):
    #N is total # of particles
    f1 = 0
    for i in range(N-2):
        for o in range(N - i+2):
            j = o+i+2
            f1 += V2(rij[i][j],cutoff)
    f2 = 0
    for k in range(N-1):
        for l in range(N-1):
            f2+= F3(phi(rij[k+1][l+1],cutoff))
